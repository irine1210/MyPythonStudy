'''
@Author  : heyheyheyJoy
@Time    : 2022/1/21 5:24 下午
@File    : 11. syntax.py
'''

# -------------------集合的创建方式-------------------

s = {2,3,4,5,1,2}
print(s)  # {1, 2, 3, 4, 5} 会把重复的去掉

s1 = set(range(6))  # 会把产生的0-5的随机序列,调用set函数存储到s1中
print(s1, type(s1))

s2 = set([1,2,3,1,8]) # set函数把列表元素转换成集合元素
print(s2,type(s2))  # {8, 1, 2, 3} <class 'set'>  会去掉重复元素且转换为set型元素


# 集合的相关操作
#-------------------集合元素的判断-------------------
s = {10,20,30,500}
print(10 in s)  # True
print(10 not in s)  # False


# -------------------集合元素的添加----------------
#  .add()一次可以添加一个;   .update()  一次可以添加多个
s.add(40)
print(s)  # {40, 10, 20, 500, 30}

s.update({200,300,400})
print(s)  # {40, 200, 10, 300, 400, 20, 500, 30}

s.update([222,333]) #放列表
print(s) #{40, 200, 10, 300, 333, 400, 20, 500, 222, 30}


# --------------------集合元素的删除--------------------
s.remove(222)
print(s)  # {40, 200, 10, 300, 333, 400, 20, 500, 30}

#s.remove(111)
# print(s)   #KeyError: 111

s.discard(111)
print(s) # 没111但是也不会抛出异常

s.pop()  # .pop() 删除任意元素，是不能添加参数的
print(s)  # {200, 10, 300, 333, 400, 20, 500, 30}
s.pop()
print(s)  # {10, 300, 333, 400, 20, 500, 30}

# ----------------------集合元素的清空----------------------
s.clear() # 清空集合的元素
print(s)  # set()


# ----------------------集合元素的比较----------------------
s3 = {10,20,30}
s4 = {20,10,30}
print(s3 == s4)  # True
print(s3 != s4)  # False
# 只要内部元素相同就相等，与内部元素顺序无关


# A.issubset(B)  判断A是否是B的子集
s5 = {10,20,30}
s6 = {10,20,40,30}
print(s5.issubset(s6))  # True

# B.issuperset(A)  判断B是A的超集
print(s6.issuperset(s5))  # True

# A.isdisjoint(B) 判断是否【没有】交集
print(s5.isdisjoint(s6)) # False 说明是有交集的

s7={20,30,40}
s8={30,40,60,90}
#--------------------交集--------------------
# (1)A & B   (2)调用 .intersection() 函数
print(s7.intersection(s8))
print(s7 & s8) # {40, 30}


#---------------------并集--------------------
# (1) A|B     (2)调用 .union()函数
print(s7.union(s8))  # {20, 40, 90, 60, 30} 去掉了重复元素
print(s7 | s8)  # {20, 40, 90, 60, 30}


#---------------------差集--------------------
print(s7.difference(s8))  # {20}
print(s7-s8)  #{20}



lst = [i*i for i in range(6)]
print(lst)  # [0, 1, 4, 9, 16, 25] 变成了列表

s = {i*i for i in range(6)}
print(s)  # {0, 1, 4, 9, 16, 25} 变成了集合

